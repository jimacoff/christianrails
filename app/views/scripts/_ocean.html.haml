:javascript

  var Ocean = {}
  Ocean.fps = 60;

  var oceanCanv = document.getElementById("ocean");
  var rainField = document.getElementById("rainfield");
  var ocean = oceanCanv.getContext("2d");
  var rain = rainField.getContext("2d");

  var frequency = 2, // per second
      minRadius = 80,
      maxRadius = 200,
      dropletSize = 6;

  var droplets = [];
  var ripples = [];

  var angle = 3;
  var oceanDepth = 666;
  var waterBand = 333;

  var dropFactor = 1.03;

  var white = '255, 255, 255';

  function ripple(originX, originY) {
    this.originX = originX;
    this.originY = originY;
    this.radius  = 0;
    this.opacity = 1;
    this.maxRadius = Math.floor((Math.random() * (maxRadius - minRadius)) + 1 + minRadius);
  }

  function droplet(x, destinationY, color) {
    this.x = x;
    this.y = -100;
    this.destinationY = destinationY;
    this.color = color;
    this.speed = 1;
  }

  ///////////////////

  Ocean.run = function() {
    possiblyCreateNewDroplet();
    Ocean.update();
    Ocean.draw();
  };

  Ocean.update = function() {
    updateDroplets();
    updateRipples();
  }

  function updateDroplets() {
    for (i = 0; i < droplets.length; i++) {
      droplets[i].y += droplets[i].speed;
      accelerateDroplet(droplets[i]);

      if( droplets[i].y >= droplets[i].destinationY ) {
        //CREATE NEW RIPPLE
        createRippleAt(droplets[i].x, droplets[i].y);

        delete droplets[i];
        droplets.splice(i, 1);
        i -= 1;  //soo bad
      }
    }
  }

  function updateRipples() {
    for (i = 0; i < ripples.length; i++) {
      ripples[i].radius  += 1;
      ripples[i].opacity -= 1 / ripples[i].maxRadius;

      if( ripples[i].radius >= ripples[i].maxRadius ) {
        delete ripples[i];
        ripples.splice(i, 1);
        i -= 1;  //soo bad
      }
    }
  }

  Ocean.draw = function() {
    ocean.clearRect(0, 0, oceanCanv.width, oceanCanv.height);
    rain.clearRect(0, 0, rainField.width, rainField.height);

    for (var i = 0; i < droplets.length; i++) { drawDroplet( droplets[i] ); }
    for (var j = 0; j < ripples.length; j++) { drawRipple( ripples[j] ); }
  }

  function drawRipple(ripple) {
    var x = ripple.originX;
    var y = ripple.originY;
    var r = ripple.radius;

    ocean.beginPath();
    ocean.arc(x, y, ripple.radius, 0, 2*Math.PI);

    var rad = ocean.createRadialGradient(x, y, 0, x, y, r);
    rad.addColorStop(0,    'rgba(' + white + ',' + ripple.opacity + ')');
    rad.addColorStop(0.05, 'rgba(' + white + ',' + ripple.opacity + ')');
    rad.addColorStop(0.1,  'rgba(' + white + ',' + ripple.opacity/2 + ')');
    rad.addColorStop(0.25, 'rgba(' + white + ',' + ripple.opacity + ')');
    rad.addColorStop(0.5,  'rgba(' + white + ',' + ripple.opacity/2 + ')');
    rad.addColorStop(0.75, 'rgba(' + white + ',' + ripple.opacity + ')');
    rad.addColorStop(1,    'rgba(' + white + ',' + '0)');
    ocean.fillStyle = rad;

    ocean.setTransform(1,0,0,0.34,0,oceanDepth);
    ocean.fill();
  }

  function drawDroplet(droplet) {
    var dx = droplet.x;
    var dy = droplet.y;
    var color = droplet.color;

    rain.beginPath();
    rain.arc(dx, dy, dropletSize, 0, 2*Math.PI);

    var rad = rain.createRadialGradient(dx, dy, 0, dx, dy, dropletSize);
    rad.addColorStop(0, 'rgba(' + color + ', 0)');
    rad.addColorStop(1, 'rgba(' + color + ', 1)');
    rain.fillStyle = rad;
    rain.fill();
  }

  function possiblyCreateNewDroplet() {
    if( (Math.floor((Math.random() * Ocean.fps) + 1)) <= frequency ) {
      createRandomDroplet();
    }
  }

  function createRandomDroplet() {
    var dropX = Math.floor((Math.random() * (rainField.width - maxRadius)) + 1);

    var bandSize = waterBand - ((maxRadius/angle) * 2);
    var destinationY = Math.floor((Math.random() * bandSize) + 1 + oceanDepth + (maxRadius/angle));

    var newDroplet = new droplet(dropX, destinationY, white);
    droplets.push( newDroplet );
  }

  function accelerateDroplet(drop) {
    drop.speed = drop.speed * dropFactor;
  }

  function createRippleAt(x, y) {
    var adjustedY = (y - oceanDepth) * angle;
    var newRipple = new ripple(x, adjustedY);
    ripples.push( newRipple );
  }

  //////////////////

  (function() {
    var onEachFrame;
    if (window.requestAnimationFrame) {
      onEachFrame = function(cb) {
        var _cb = function() { cb(); requestAnimationFrame(_cb); }
        _cb();
      };
    } else if (window.webkitRequestAnimationFrame) {
      onEachFrame = function(cb) {
        var _cb = function() { cb(); webkitRequestAnimationFrame(_cb); }
        _cb();
      };
    } else if (window.mozRequestAnimationFrame) {
      onEachFrame = function(cb) {
        var _cb = function() { cb(); mozRequestAnimationFrame(_cb); }
        _cb();
      };
    } else {
      onEachFrame = function(cb) {
        setInterval(cb, 500 / Ocean.fps);
      }
    }
    window.onEachFrame = onEachFrame;
  })();

  window.onEachFrame(Ocean.run);
